        In questo file di testo scrivo le convenzioni adottate per denominare
        le variabile utilizzate cosi da avere una strategia comune e chiara di denominazione.

schemaGiocatore: 
    per identificare l'oggetto che rappresenta lo schema del giocatore

modelloGiocatore: 
    per identificare la classe che permette l'interazione con la collezione
    del nostro Database; verrà utilizzato per creare la "bozza"
    di un documento di tipo giocatore, che successivamente verrà salvata
    all'interno del DB.
    Ad esempio:

            let giocatoreDB = new modelloGiocatore(gObject);
            //Poi avviene il salvataggio all'interno del sistema
            giocatoreDB = await giocatoreDB.save();

Giocatore:
    per identificare la classe di tipo Giocatore, un oggetto di
    questa classe lo chiamo:
        gObject
n
Come si relazionano tra di loro gObject e giocatoreDB?

    1) gObject istanza delle classe Giocatore
    2) giocatoreDB istanza delle classe modelloGiocatore

gObject è un oggetto che utilizziamo come oggetto intermedio dove
salvare le informazioni ad esempio di una richiesta HTTP verso 
un path come /api/v1/giocatori .

I metodi della classe Giocatore, permettono di fare eventuali operazioni
intermedie su un oggetto di tipo Giocatore, che costituirà poi una eventuale
bozza per quanto riguarda l'effettiva interazione con il Database.


                
